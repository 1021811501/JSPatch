//
//  JPEngine.h
//  JSPatch
//
//  Created by bang on 15/4/30.
//  Copyright (c) 2015 bang. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <JavaScriptCore/JavaScriptCore.h>


@interface JPEngine : NSObject

/*!
 @method
 @discussion start the JSPatch engine, execute only once.
 */
+ (void)startEngine;

/*!
 @method
 @description Evaluate a string of JavaScript code. Call it after +startEngine.
 @param script: A string containing the JavaScript code to evaluate.
 @param resourceURL: The resouceURL of the script, can be a simple file name, 
                     will display in Safari debugger.
 @result The last value generated by the script.
 */
+ (JSValue *)evaluateScript:(NSString *)script withSourceURL:(NSURL *)resourceURL;

/*!
 @method
 @description Evaluate a string of JavaScript code. Call it after +startEngine.
              Will generate a random resouceURL to the Safari debugger.
 @param script: A string containing the JavaScript code to evaluate.
 @result The last value generated by the script.
 */
+ (JSValue *)evaluateScript:(NSString *)script;

/*!
 @method
 @description Return the JSPatch JavaScript execution environment.
 */
+ (JSContext *)context;



/*!
 @method
 @description Add JPExtension.
 @param extensions: An array containing class name string.
 */
+ (void)addExtensions:(NSArray *)extensions;

/*!
 @method
 @description add new struct type supporting to JS
 @param defineDict: the definition of struct, for Example:
    @{
      @"name": @"CGAffineTransform",   //struct name
      @"types": @"ffffff",  //struct types
      @"keys": @[@"a", @"b", @"c", @"d", @"tx", @"ty"]  //struct keys in JS
    }
 */
+ (void)defineStruct:(NSDictionary *)defineDict;

/*!
 @method
 @description Return the registered struct definition in JSPatch,
              the key of dictionary is the struct name.
 */
+ (NSMutableDictionary *)registeredStruct;
@end



@interface JPExtension : NSObject
+ (void)main:(JSContext *)context;

+ (void *)formatPointerJSToOC:(JSValue *)val;
+ (id)formatPointerOCToJS:(void *)pointer;
+ (id)formatJSToOC:(JSValue *)val;
+ (id)formatOCToJS:(id)obj;

+ (int)sizeOfStructTypes:(NSString *)structTypes;
+ (void)getStructDataWidthDict:(void *)structData dict:(NSDictionary *)dict structDefine:(NSDictionary *)structDefine;
+ (NSDictionary *)getDictOfStruct:(void *)structData structDefine:(NSDictionary *)structDefine;
@end

